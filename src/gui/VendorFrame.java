/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;
import core.Vendor;
import dao.VendorDAO;
import dao.DBConnection;
import java.util.List;
import javax.swing.JOptionPane;
/**
 *
 * @author Holden.Hall
 */
public class VendorFrame extends javax.swing.JFrame {
    private DBConnection conn;
    private VendorDAO vendorDAO;
    private List<Vendor> vendorList;
    VendorTableModel model;
    
    public VendorFrame(DBConnection myConn) {
        initComponents();
        this.conn = myConn;
        vendorDAO = new VendorDAO(this.conn);
        name_Label.setText("Name:");
        contact_Label.setText("Contact:");
        city_Label.setText("City:");
        state_Label.setText("State:");
        address_Label.setText("Address:");
        zip_Label.setText("Zip:");
       
        VendorTable.setAutoCreateRowSorter(true);

        try{
            //Get a connection to the DB
            
            //Retrieve tuples from Instructor table
            vendorList = vendorDAO.getAllVendors();          
        }
        catch(Exception exc){
            System.out.println("Error Populating table!");
        }
        model = new VendorTableModel(vendorList);
        VendorTable.setModel(model);
        
         
    }
    
  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        VendorTable = new javax.swing.JTable();
        VID_Label = new javax.swing.JLabel();
        VID_TextField = new javax.swing.JTextField();
        name_Label = new javax.swing.JLabel();
        contact_Label = new javax.swing.JLabel();
        address_Label = new javax.swing.JLabel();
        city_Label = new javax.swing.JLabel();
        state_Label = new javax.swing.JLabel();
        zip_Label = new javax.swing.JLabel();
        name_TextField = new javax.swing.JTextField();
        contact_TextField = new javax.swing.JTextField();
        address_TextField = new javax.swing.JTextField();
        city_TextField = new javax.swing.JTextField();
        state_TextField = new javax.swing.JTextField();
        zip_TextField = new javax.swing.JTextField();
        Add_Button = new javax.swing.JButton();
        Update_Button = new javax.swing.JButton();
        Delete_Button = new javax.swing.JButton();
        Reset_Button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        VendorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "VID", "name", "contact", "address", "city", "state", "zip"
            }
        ));
        VendorTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                VendorTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(VendorTable);

        VID_Label.setText("VID:");

        VID_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VID_TextFieldActionPerformed(evt);
            }
        });

        name_Label.setText("name:");

        contact_Label.setText("contact:");

        address_Label.setText("address:");

        city_Label.setText("city:");

        state_Label.setText("state:");

        zip_Label.setText("zip:");

        name_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                name_TextFieldActionPerformed(evt);
            }
        });

        contact_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contact_TextFieldActionPerformed(evt);
            }
        });

        address_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                address_TextFieldActionPerformed(evt);
            }
        });

        city_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                city_TextFieldActionPerformed(evt);
            }
        });

        state_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                state_TextFieldActionPerformed(evt);
            }
        });

        zip_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zip_TextFieldActionPerformed(evt);
            }
        });

        Add_Button.setText("Add");
        Add_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add_ButtonActionPerformed(evt);
            }
        });

        Update_Button.setText("Update");
        Update_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update_ButtonActionPerformed(evt);
            }
        });

        Delete_Button.setText("Delete");
        Delete_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_ButtonActionPerformed(evt);
            }
        });

        Reset_Button.setText("Reset");
        Reset_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Reset_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 920, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Add_Button)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(name_Label)
                                    .addComponent(VID_Label)
                                    .addComponent(address_Label)
                                    .addComponent(city_Label)
                                    .addComponent(contact_Label)
                                    .addComponent(state_Label)
                                    .addComponent(zip_Label))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(state_TextField)
                            .addComponent(city_TextField)
                            .addComponent(address_TextField)
                            .addComponent(contact_TextField)
                            .addComponent(name_TextField)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Update_Button)
                                .addGap(18, 18, 18)
                                .addComponent(Delete_Button))
                            .addComponent(VID_TextField)
                            .addComponent(zip_TextField))
                        .addGap(18, 18, 18)
                        .addComponent(Reset_Button)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Add_Button)
                    .addComponent(Update_Button)
                    .addComponent(Delete_Button)
                    .addComponent(Reset_Button))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(VID_Label)
                    .addComponent(VID_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name_Label)
                    .addComponent(name_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(contact_Label)
                    .addComponent(contact_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(address_Label)
                    .addComponent(address_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(city_Label)
                    .addComponent(city_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(state_Label)
                    .addComponent(state_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zip_Label)
                    .addComponent(zip_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void VID_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VID_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_VID_TextFieldActionPerformed

    private void contact_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contact_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contact_TextFieldActionPerformed

    private void name_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_name_TextFieldActionPerformed

    private void city_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_city_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_city_TextFieldActionPerformed

    private void state_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_state_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_state_TextFieldActionPerformed

    private void zip_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zip_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_zip_TextFieldActionPerformed

    private void VendorTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VendorTableMouseClicked
        // TODO add your handling code here:
        
       int selectedRowIndex = VendorTable.getSelectedRow();
       int selectedRowModel = VendorTable.convertRowIndexToModel(selectedRowIndex);
       
       
       VID_TextField.setText(model.getValueAt(selectedRowModel, 0).toString());
       name_TextField.setText(model.getValueAt(selectedRowModel, 1).toString());
       contact_TextField.setText(model.getValueAt(selectedRowModel, 2).toString());
       address_TextField.setText(model.getValueAt(selectedRowModel, 3).toString());
       city_TextField.setText(model.getValueAt(selectedRowModel, 4).toString());
       state_TextField.setText(model.getValueAt(selectedRowModel, 5).toString());
       zip_TextField.setText(model.getValueAt(selectedRowModel, 6).toString());
       
       //disable create button
       Add_Button.setEnabled(false);
    }//GEN-LAST:event_VendorTableMouseClicked

    private void address_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_address_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_address_TextFieldActionPerformed

    private void Add_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add_ButtonActionPerformed
        String VID, name, contact, address, city, state, zip;
        VID = VID_TextField.getText();
        name = name_TextField.getText();
        contact = contact_TextField.getText();
        address = address_TextField.getText();
        city = city_TextField.getText();
        state = state_TextField.getText();
        zip = zip_TextField.getText();
        
        Vendor newVendor = new Vendor(VID, name, contact, address, city, state, zip);
        
        try{
            vendorDAO.addVendor(newVendor);
            //refresh table after adding new tuple
            vendorList = vendorDAO.getAllVendors();
        }
        catch(Exception exc){
           JOptionPane.showMessageDialog(this, "There was an error adding this vendor please make sure you're entered information is matching"
                   + "                   this example:\n VID: X2Z3 (must be diffrent for each vendor) \n Name: Store Name \n contact: xxx-xxx-xxxx \n address: 123 Example St \n city: Wichita Falls \n state: TX \n zip: 76301");
        }
        
        model = new VendorTableModel(vendorList);
        VendorTable.setModel(model);
        
        VID_TextField.setText("");
        name_TextField.setText("");
        contact_TextField.setText("");
        address_TextField.setText("");
        city_TextField.setText("");
        state_TextField.setText("");
        zip_TextField.setText("");        
    }//GEN-LAST:event_Add_ButtonActionPerformed

    private void Reset_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Reset_ButtonActionPerformed
       VID_TextField.setText("");
       name_TextField.setText("");
       contact_TextField.setText("");
       address_TextField.setText("");
       city_TextField.setText("");
       state_TextField.setText("");
       zip_TextField.setText("");
       Add_Button.setEnabled(true);

    }//GEN-LAST:event_Reset_ButtonActionPerformed

    private void Delete_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_ButtonActionPerformed
        String VID, name, contact, address, city, state, zip;
        VID = VID_TextField.getText();
        name = name_TextField.getText();
        contact = contact_TextField.getText();
        address = address_TextField.getText();
        city = city_TextField.getText();
        state = state_TextField.getText();
        zip = zip_TextField.getText();
        
        Vendor oldVendor = new Vendor(VID, name, contact, address, city, state, zip);
        
        try{
            vendorDAO.deleteVendor(oldVendor);
            //refresh table after adding new tuple
            vendorList = vendorDAO.getAllVendors();
        }
        catch(Exception exc){
            JOptionPane.showMessageDialog(this, "Error: there was a problem deleting this vendor");
        }  
        
        model = new VendorTableModel(vendorList);
        VendorTable.setModel(model);
        Add_Button.setEnabled(true);

        VID_TextField.setText("");
        name_TextField.setText("");
        contact_TextField.setText("");
        address_TextField.setText("");
        city_TextField.setText("");
        state_TextField.setText("");
        zip_TextField.setText("");
    }//GEN-LAST:event_Delete_ButtonActionPerformed

    private void Update_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update_ButtonActionPerformed
        String VID, name, contact, address, city, state, zip;
        VID = VID_TextField.getText();
        name = name_TextField.getText();
        contact = contact_TextField.getText();
        address = address_TextField.getText();
        city = city_TextField.getText();
        state = state_TextField.getText();
        zip = zip_TextField.getText();
        
        Vendor changedVendor = new Vendor(VID, name, contact, address, city, state, zip);
        
        try{
            vendorDAO.updateVendor(changedVendor);
            //refresh table after adding new tuple
            vendorList = vendorDAO.getAllVendors();
        }
        catch(Exception exc){
             JOptionPane.showMessageDialog(this, "There was an error updating this vendor please make sure you're entered information is matching this example:"
                     + "\n 105 (must be diffrent for each vendor) \n Store Name \n xxx-xxx-xxxx \n 123 Example St \n Wichita Falls \n TX\n 76301");
        }
        
        model = new VendorTableModel(vendorList);
        VendorTable.setModel(model);
    }//GEN-LAST:event_Update_ButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VendorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VendorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VendorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VendorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VendorFrame(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add_Button;
    private javax.swing.JButton Delete_Button;
    private javax.swing.JButton Reset_Button;
    private javax.swing.JButton Update_Button;
    private javax.swing.JLabel VID_Label;
    private javax.swing.JTextField VID_TextField;
    private javax.swing.JTable VendorTable;
    private javax.swing.JLabel address_Label;
    private javax.swing.JTextField address_TextField;
    private javax.swing.JLabel city_Label;
    private javax.swing.JTextField city_TextField;
    private javax.swing.JLabel contact_Label;
    private javax.swing.JTextField contact_TextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel name_Label;
    private javax.swing.JTextField name_TextField;
    private javax.swing.JLabel state_Label;
    private javax.swing.JTextField state_TextField;
    private javax.swing.JLabel zip_Label;
    private javax.swing.JTextField zip_TextField;
    // End of variables declaration//GEN-END:variables
}
